#!perlmy $highPop = 0;my $highTech = 0;my @highPopWorlds = ();my @highTechWorlds = ();my $popTotal = 0;my $numWorlds = 0;my $subsector;sub commify{	my( $num ) = @_;	# from Perl FAQ 5	$num =~	s/(		^[-+]?            # beginning of number.		\d+?              # first digits before first comma		(?=               # followed by, (but not included in the match) :		(?>(?:\d{3})+)    # some positive multiple of three digits.		(?!\d)            # an *exact* multiple, not x * 3 + 1 or whatever.		)		|                 # or:		\G\d{3}           # after the last group, get three digits		(?=\d)            # but they have to have more digits after them.	)/$1,/xg;	return $num;}sub abbreviateNumber{	my( $num ) = @_;	return commify( $num )                     if $num <           1_000_000;	return (int($num /  1e4)/1e2)." million"   if $num <       1_000_000_000;	return (int($num /  1e7)/1e2)." billion"   if $num <   1_000_000_000_000;	return (int($num / 1e10)/1e2)." trillion";}sub listify{	my( @list ) = @_;	my $len = scalar(@list);	return  $list[0]               if $len == 1;	return "$list[0] and $list[1]" if $len == 2;	return join(", ", @list[0, $len-2])." and ".$list[$len-1];}sub summarize{	print "\n";	print "The $subsector Subsector contains $numWorlds worlds with a combined population of ",abbreviateNumber( $popTotal )," inhabitants. ";	print "The highest population is ",abbreviateNumber($highPop)," at ",listify(@highPopWorlds),". ";	print "The highest tech level is ",$highTech," at ",listify(@highTechWorlds),".\n";	print "\n";}# From Games::Traveller::UWPmy @hex = ( 0..9, 'A'..'H', 'J'..'N', 'P'..'Z' );my %hex2dec = ();for( my $i=0; $i<@hex; $i++ ){   $hex2dec{$hex[$i]} = "$i";}while (<>) {	chomp;	if( /^\# \s+ Subsector \s+ ([A-P]): \s+ (.+?) \s* $/x )	{		my $nextSubsector = $2;		summarize() if $subsector;		$subsector = $nextSubsector;		$highPop = 0;		$highTech = 0;		@highPopWorlds = ();		@highTechWorlds = ();		$popTotal = 0;		$numWorlds = 0;	}	next if /^\s*$/;	next if /^#/;	if( /^(.{14})(.{2})(.{2}) (.{9})  (.) (.{40}) (.) (.{3}) (.{2})/ )	{		my ($name,$c,$r,$uwp,$bases,$trade,$zone,$pbg,$ally,$stars) = ($1,$2,$3,$4,$5,$6,$7,$8,$9);		$numWorlds++;		$name =~ s/\s+$//;		$stars =~ s/\s+$//;		$popdig = $hex2dec{ substr( $uwp, 4, 1 ) };		$pmult  = substr( $pbg, 1, 1 );		$tech   = substr( $uwp, 8, 1 );		if( $pmult == 0 )		{			# No population multiplier - this leads to boring "1 billion", etc.			# For the summaries, pick something random but makeit deterministic			srand( ord($name) * ord(reverse($name)) );			$pmult = rand(10);		}		$pop = 10 ** $popdig * $pmult;		$popTotal += $pop;		if( $pop > $highPop )		{			$highPop = $pop;			@highPopWorlds = ( $name );		}					elsif( $pop == $highPop )		{			push( @highPopWorlds, $name );		}			if( $tech gt $highTech )		{			$highTech = $tech;			@highTechWorlds = ( $name );		}					elsif( $tech eq $highTech )		{			push( @highTechWorlds, $name );		}	}	else	{		print "Unmatched: $_\n";	}}summarize();